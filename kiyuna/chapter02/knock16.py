r"""knock16.py
16. ファイルをN分割する
自然数Nをコマンドライン引数などの手段で受け取り，入力のファイルを行単位でN分割せよ．
同様の処理をsplitコマンドで実現せよ．

    ＿人人人人人人＿
    ＞　実現せよ　＜    generated by https://totuzennosi.sacnoha.com/
    ￣Y^Y^Y^Y^Y￣

[URL]
https://nlp100.github.io/ja/ch02.html#16-ファイルをn分割する

[Ref]
- split に -n オプションはあるのか
    - https://linuxjm.osdn.jp/html/GNU_textutils/man1/split.1.html
    - https://www.atmarkit.co.jp/ait/articles/1711/24/news016.html

[Command]
split
    -l 分割ファイルの行数を指定する

[Usage]
INPUT_PATH=./popular-names.txt
N=59
python knock16.py $INPUT_PATH $N
num_line=$(cat $INPUT_PATH | wc -l)
split -l $((($num_line + $N - 1) / $N)) $INPUT_PATH out16_

[Explanation]
source knock16_test.sh; test 59
N=59 のとき
    方法 1 のとき -> 48*57 + 44*1: 58 ファイル（空のファイルが）
    方法 2 のとき -> 48*7 + 47*52: 59 ファイル
24 行を 7 つに分割しようとすると，方法 1 のとき 6 ファイルになる
"""
import os
import sys

sys.path.append(os.path.join(os.path.dirname(__file__), "../../"))
from kiyuna.utils.message import Renderer, message  # isort:skip


if __name__ == "__main__":
    path, n, *_ = sys.argv[1:]
    n = int(n)

    tot = sum(1 for _ in open(path))

    # 方法 1: 最後にしわ寄せがいく（空のファイルを作ることもある）
    res1 = []
    with open(path) as f_in:
        m = (tot + n - 1) // n  # 切り上げ（ceil）
        for i in range(n):
            cnt = 0
            with open(f"out16a{i + 1:02d}", "w") as f_out:
                for _ in range(m):
                    if f_out.write(f_in.readline()):
                        cnt += 1
            res1.append(cnt)

    # 方法 2: できる限り均等に分ける
    res2 = []
    with open(path) as f_in:
        for i in range(n):
            with open(f"out16b{i + 1:02d}", "w") as f_out:
                m = tot // n + (i < tot % n)
                for _ in range(m):
                    f_out.write(f_in.readline())
                res2.append(m)

    message(res1)
    message(res2)
